[workspace]
resolver = "3"
members  = ["uibeam", "uibeam_html", "uibeam_macros"]

[workspace.package]
version    = "0.2.0"
edition    = "2024"
authors    = ["kanarus <kanarus786@gmail.com>"]
homepage   = "https://crates.io/uibeam"
repository = "https://github.com/ohkami-rs/uibeam"
readme     = "README.md"
license    = "MIT"
keywords   = ["jsx", "html", "template-engine"]
categories = ["template-engine", "web-programming"]

[workspace.metadata.tasks]
CI = """
cargo metask \
    test
"""

test = """
cargo metask \
    test_crates \
    test_examples
"""
test_crates = """
    cargo test --doc --all-features
    cargo test --lib
    cargo info uibeam
    set -x
    echo '---'
    cargo info uibeam | awk '/\\[.*__integration__.*\\]/ {print $1}'
    echo '---'
    cargo info uibeam | awk '/^ *[a-z]+ *= *\\[.*__integration__.*\\]$/ {print $1}'
    echo '---'
    cargo info uibeam | awk '/\\[__integration__,/ {print $1}'
    echo '---'
    cargo info uibeam | awk '/[a-z]+ *=/ {print $1}'
    echo '---'
    cargo info uibeam | awk '/[:alpha:]+ *=/ {print $1}'
    echo '---'
    cargo info uibeam | awk '/__integration__/ {print $1}'
    echo '---'
    cargo info uibeam | awk '/__integration__/ {print $1}' | grep -E '^[a-z]+$'
    echo '---'
    cargo info uibeam | awk '/__integration__/ {print $1}' | grep -E '^[:alpha:]+$'
    echo '---'
    cargo info uibeam | awk '/__integration__/ {print $1}' | grep -E '^[[:alpha:]]+$'
    echo '---'
    cargo info uibeam | awk '/__integration__/ {print $1}' | grep -E '^[^_]'
    echo '---'
    cargo info uibeam | awk '/__integration__/ {if ($1 != "__integration__") {print $1}}'
    echo '---'
    for integration in $(cargo info uibeam | awk '/^ *[a-z]+ *= *\\[.*__integration__.*\\]$/ {print $1}'); do
        cargo test --lib --features "$integration"
    done
"""
test_examples = """
    cd examples
    for directory in ./*/; do
        if [ "$(basename $directory)" != "target" ]; then
            cd $directory
            cargo test
            cargo run
            cd ..
        fi
    done
"""
